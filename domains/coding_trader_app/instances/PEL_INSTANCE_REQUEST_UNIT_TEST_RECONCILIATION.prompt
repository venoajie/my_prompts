<!-- PEL INSTANCE REQUEST: UNIT TEST GENERATION FOR RECONCILIATION_AGENT -->
<!-- SYSTEM CORE: PEL_SYSTEM_CORE_V1.0.prompt -->
<Instance>
    <KnowledgeBase>
        <!-- The UTE-1 persona needs the source code of the component it is testing. -->
        <Document id="RECONCILIATION_AGENT_SOURCE" src="src/services/executor/deribit/reconciliation_agent.py" description="The source code for the ReconciliationAgent class.">
        ```python
        # The full, complete source code of reconciliation_agent.py would be pasted here.
        ```
        </Document>
        
        <!-- It's also helpful to provide related data models for context. -->
        <Document id="SHARED_MODELS_SOURCE" src="src/shared/models.py" description="Core Pydantic data models used by the agent.">
        ```python
        # The full, complete source code of models.py would be pasted here.
        ```
        </Document>
    </KnowledgeBase> 
    <SessionState>    
        <last_outcome status="INFO">
            <summary>
            The application is being prepared for production. A comprehensive suite of unit tests is required to ensure code quality and prevent regressions.
            The current task is to generate unit tests for the ReconciliationAgent component.
            </summary>
        </last_outcome>
    </SessionState>
    <Runtime>
        <ActivatePersona alias="UTE-1"/>
        <Mandate>
            Generate a complete Python unit test file for the `ReconciliationAgent` class provided in the `RECONCILIATION_AGENT_SOURCE` document.
            The tests should use the `pytest` framework and `pytest-mock` for mocking dependencies like the database client and the API client.
        </Mandate>
    </Runtime>
</Instance>